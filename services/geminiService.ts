
import { GoogleGenAI, Type, Modality, GenerateContentResponse } from "@google/genai";
import type { UploadedImage } from '../types';

if (!process.env.API_KEY) {
  throw new Error("API_KEY environment variable is not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

/**
 * Generates an array of 5 text prompts based on the selected mode.
 */
export const generatePrompts = async (mode: 'professional' | 'creative'): Promise<string[]> => {
  const basePrompt = mode === 'professional'
    ? 'Generate 5 distinct, concise prompts for an AI image editor to turn a casual photo into a polished, professional headshot. Each prompt should specify business attire (like a suit or blazer) and a clean, neutral, corporate-style background (like a modern office or a soft gray wall). The goal is a high-quality, corporate look. Return a JSON array of 5 distinct string prompts.'
    : 'Generate 5 distinct, concise prompts for an AI image editor to create creative and fun variations of a person\'s photo. Each prompt should suggest a new, varied expression or a slightly different fun pose/angle, while keeping the original clothing and background mostly intact. The goal is personality and variety. Return a JSON array of 5 distinct string prompts.';
  
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash',
      contents: basePrompt,
      config: {
        responseMimeType: 'application/json',
        responseSchema: {
          type: Type.ARRAY,
          items: {
            type: Type.STRING,
            description: 'A single, concise prompt for image generation.'
          }
        }
      }
    });

    const prompts = JSON.parse(response.text);
    if (Array.isArray(prompts) && prompts.length > 0) {
      return prompts;
    }
    throw new Error('Failed to parse prompts from AI response.');
  } catch (error) {
    console.error("Error generating prompts:", error);
    // Fallback prompts
    return mode === 'professional'
      ? [
          "A professional headshot in business attire with a clean, corporate background.",
          "Create a polished corporate headshot with the person in a dark blazer, against a soft gray studio background.",
          "Generate a friendly but professional headshot, suitable for a LinkedIn profile, with a modern office background.",
          "A confident headshot with the subject in a button-up shirt, against a slightly out-of-focus architectural background.",
          "Transform into a classic business headshot, with professional lighting and a simple, non-distracting background."
        ]
      : [
          "A candid laughing expression, keeping the original clothes and background.",
          "A curious and thoughtful expression, with a slight head tilt.",
          "Generate a confident smile with a slightly different, more dynamic angle.",
          "A fun, winking expression, keeping the style of the original photo.",
          "A warm, gentle smile, looking directly at the camera."
        ];
  }
};

/**
 * Edits an image using a base image and a text prompt.
 */
export const editImage = async (image: UploadedImage, prompt: string): Promise<string> => {
  const imagePart = {
    inlineData: {
      data: image.dataUrl.split(',')[1],
      mimeType: image.mimeType,
    },
  };
  const textPart = { text: prompt };

  const response: GenerateContentResponse = await ai.models.generateContent({
    model: 'gemini-2.5-flash-image-preview',
    contents: { parts: [imagePart, textPart] },
    config: {
      responseModalities: [Modality.IMAGE, Modality.TEXT],
    },
  });

  for (const part of response.candidates[0].content.parts) {
    if (part.inlineData) {
      return `data:${part.inlineData.mimeType};base64,${part.inlineData.data}`;
    }
  }

  throw new Error("No image was generated by the AI.");
};
